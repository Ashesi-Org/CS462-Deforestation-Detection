# This is a workflow to test the AI model in the project-architecture branch

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events only for the "project-architecture" branch
  push:
    branches: [ "project-architecture" ]
  pull_request:
    branches: [ "project-architecture" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  ai-model-test:
    name: Test AI Model Placeholder
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the correct branch
      - name: Check out code
        uses: actions/checkout@v3
        with:
          ref: project-architecture  # Ensure the correct branch is checked out

      # Step 2: Debug the file structure to confirm paths
      - name: Debug File Paths
        run: |
          echo "Current Directory:"
          pwd
          echo "Files and Directories:"
          ls -R

      # Step 3: Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 4: Install dependencies
      - name: Install TensorFlow
        run: pip install tensorflow

      # Step 5: Run the test script
      - name: Run Model Test
        run: python ai-model/test_h5_model.py  # Ensure the correct path is used

            
          
  frontend-check:
    name: Validate Frontend Placeholder
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Validate HTML
        run: |
          echo "Validating HTML..."
          cat frontend-development/placeholderindex.html
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
